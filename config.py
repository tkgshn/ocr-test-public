"""
設定ファイル
"""
import os
from dotenv import load_dotenv

# 環境変数を読み込み
load_dotenv()

# OpenAI API設定
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
OPENAI_MODEL_VISION = "gpt-4o"
OPENAI_MODEL_TEXT = "gpt-4o"

# ファイルアップロード設定
MAX_FILE_SIZE_MB = 10
ALLOWED_IMAGE_EXTENSIONS = ['.jpg', '.jpeg', '.png', '.gif', '.webp', '.svg']
ALLOWED_DOCUMENT_EXTENSIONS = ['.txt', '.pdf', '.docx', '.md']

# OCR処理設定
VISION_DETAIL = "high"
TEMPERATURE_OCR = 0.2
TEMPERATURE_CORRECTION = 0.3
TEMPERATURE_ORGANIZATION = 0.7

# 並列処理設定
MAX_PARALLEL_REQUESTS = 5

# プロンプトテンプレート
OCR_SYSTEM_PROMPT = """```xml
<instructions>
あなたは手書き文字を読み取るアシスタントです。Vision機能を使って、与えられた画像から手書きで書かれた文字を正確に読み取ってください。

この画像は住民会議で回収された回答用紙であり、以下の情報が含まれています：
- 「あなたが考える現状の課題」
- 「その問題を解決する方法」として、以下のカテゴリに分かれています：
  - 個人としてできること
  - 地域としてできること
  - 行政の役割
  - その他
解決する方法は、複数個あるかもしれませんし、場合によってはたくさん書かれているかもしれません。それらはすべて読み取ってください。

### タスクの手順：
1. 画像内の手書き文字を認識し、テキストとして抽出してください。
2. 市民が書いた文字のみを対象とし、事前に印刷されたフォーマットや説明文は無視してください。
3. 認識したテキストを以下のJSONフォーマットで出力してください：
   ```json
   [
     {
       "problem": "<地域の課題>",
       "personal": "<個人としてできること>",
       "community": "<地域としてできること>",
       "gov": "<行政の役割>",
       "others": "<その他>"
     }
   ]
   ```
4. 出力にはXMLタグを含めないでください。
5. 可能な限り正確に手書き文字を読み取り、誤認識を最小限に抑えてください。

</instructions>

<examples>
<example>
<input>
画像には「交通機関が不便」と書かれており、その下に「個人としてできること：近くの人と乗り合いをする」「地域としてできること：地域のバス運行を検討する」「行政の役割：公共交通の充実、乗合タクシーの検討」「その他：タクシー補助制度の導入」と記載されている。
</input>
<output>
[
  {
    "problem": "交通機関が不便",
    "personal": "近くの人と乗り合いをする",
    "community": "地域のバス運行を検討する",
    "gov": "公共交通の充実、乗合タクシーの検討",
    "others": "タクシー補助制度の導入"
  }
]
</output>
</example>
</examples>
```"""

CORRECTION_SYSTEM_PROMPT = """```xml
<instructions>
{ocr_result}のJSONデータの中に含まれる文字列の誤認識を修正してください。以下の手順に従って、適切な修正を行ってください。

1. JSONデータ内の文字列を解析し、文脈を考慮して誤認識された可能性のある文字を特定してください。
2. ありえない文字や意味が通らない単語が含まれている場合、前後の文脈を踏まえて適切な修正を行ってください。
3. 修正の際には参考資料を考慮し、正しい表記を確認してください。
4. 可能な限り自然な文章になるように修正し、意味が通るようにしてください。
5. 出力にはXMLタグを含めず、修正後のJSONのみを返してください。
</instructions>
```"""

ORGANIZATION_SYSTEM_PROMPT = """```xml
<instruction>
あなたのタスクは、提供されたデータを基に、地域の課題ごとに整理し、それぞれの立場（個人、地域、行政、その他）からの解決策や関わり方を明確にすることです。以下の手順に従ってください。

1. **データの統合と整理**
   - データには、各参加者の意見が含まれています。
   - これらの意見を統合し、類似する内容をまとめ、課題ごとに整理してください。
   - 可能な限り元のデータの意味や表現を変えずに補足しながら整理してください。

2. **課題ごとの分類**
   - 各課題について、以下のカテゴリに分類してください：
     - `problem`: 地域の課題
     - `personal`: 個人としてできること
     - `community`: 地域としてできること
     - `gov`: 行政の役割
     - `others`: その他（民間等）

3. **出力フォーマット**
   - 出力はJSON形式で提供してください。
   - 各課題を辞書形式で整理し、リストとして出力してください。
   - `gov` などの各カテゴリの内容は、短い文章のリストとして表現してください。
   - XMLタグは含めないでください。

</instruction>
```"""

MARKDOWN_SYSTEM_PROMPT = """```xml
<instructions>
以下の手順に従って、提供されたJSONデータをMarkdown形式に変換してください。

1. 入力されたJSONデータを解析し、各課題を識別する。
2. 各課題を `##` (h2) 見出しとしてMarkdownに変換する。
3. 課題ごとに「個人としてできること」「地域としてできること」「行政の役割」「その他」の視点を `###` (h3) 見出しとして整理する。
4. 各視点ごとの具体的な行動を箇条書き (`- `) でリスト化する。
5. 出力にはXMLタグを含めず、純粋なMarkdown形式で整形する。

以下のフォーマットに従って出力してください：

```
## 課題のタイトル

### 個人としてできること
- 具体的な行動

### 地域としてできること
- 具体的な行動

### 行政の役割
- 具体的な行動

### その他
- 具体的な行動
```

</instructions>
```"""
